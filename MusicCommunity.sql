-- MySQL Script generated by MySQL Workbench
-- Fri Nov 21 19:10:46 2014
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema MusicCommunity
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `MusicCommunity` ;

-- -----------------------------------------------------
-- Schema MusicCommunity
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `MusicCommunity` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `MusicCommunity` ;

-- -----------------------------------------------------
-- Table `MusicCommunity`.`Login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Login` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Login` (
  `loginID` INT NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(45) NOT NULL,
  `isAdmin` TINYINT(1) NOT NULL,
  PRIMARY KEY (`loginID`),
  UNIQUE INDEX `loginID_UNIQUE` (`loginID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`User` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`User` (
  `userID` INT NOT NULL AUTO_INCREMENT,
  `loginID` INT NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NULL,
  `picture` VARCHAR(45) NULL,
  `D.O.B` DATE NULL,
  `Email` VARCHAR(45) NULL,
  `Ucity` VARCHAR(10) NULL,
  `Score` DECIMAL(10,2) NULL,
  `createTime` DATETIME NULL,
  `loginTime` DATETIME NULL,
  PRIMARY KEY (`userID`),
  INDEX `users_loginid_idx` (`loginID` ASC),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC),
  UNIQUE INDEX `loginID_UNIQUE` (`loginID` ASC),
  UNIQUE INDEX `userID_UNIQUE` (`userID` ASC),
  UNIQUE INDEX `Email_UNIQUE` (`Email` ASC),
  CONSTRAINT `users_loginid`
    FOREIGN KEY (`loginID`)
    REFERENCES `MusicCommunity`.`Login` (`loginID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Type` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Type` (
  `typeID` INT NOT NULL AUTO_INCREMENT,
  `parentID` INT NULL,
  `typeName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`typeID`),
  UNIQUE INDEX `typeName_UNIQUE` (`typeName` ASC),
  UNIQUE INDEX `typeID_UNIQUE` (`typeID` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Like`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Like` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Like` (
  `userID` INT NOT NULL,
  `typeID` INT NOT NULL,
  PRIMARY KEY (`userID`, `typeID`),
  INDEX `Likes_typeID_idx` (`typeID` ASC),
  CONSTRAINT `Likes_userID`
    FOREIGN KEY (`userID`)
    REFERENCES `MusicCommunity`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `Likes_typeID`
    FOREIGN KEY (`typeID`)
    REFERENCES `MusicCommunity`.`Type` (`typeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Band`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Band` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Band` (
  `bandID` INT NOT NULL AUTO_INCREMENT,
  `loginID` INT NULL,
  `bandName` VARCHAR(45) NULL,
  `hyperLink` VARCHAR(45) NULL,
  `createTime` DATETIME NULL,
  `loginTime` VARCHAR(45) NULL,
  `isPermission` TINYINT(1) NULL,
  `bio` VARCHAR(45) NULL,
  PRIMARY KEY (`bandID`),
  UNIQUE INDEX `loginID_UNIQUE` (`loginID` ASC),
  CONSTRAINT `band_loginID`
    FOREIGN KEY (`loginID`)
    REFERENCES `MusicCommunity`.`Login` (`loginID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Fan`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Fan` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Fan` (
  `userID` INT NOT NULL,
  `bandID` INT NOT NULL,
  PRIMARY KEY (`userID`, `bandID`),
  INDEX `fans_bandID_idx` (`bandID` ASC),
  CONSTRAINT `fans_userID`
    FOREIGN KEY (`userID`)
    REFERENCES `MusicCommunity`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fans_bandID`
    FOREIGN KEY (`bandID`)
    REFERENCES `MusicCommunity`.`Band` (`bandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`FollowUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`FollowUser` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`FollowUser` (
  `userID` INT NOT NULL,
  `followID` INT NOT NULL,
  PRIMARY KEY (`userID`, `followID`),
  INDEX `followuser_followID_idx` (`followID` ASC),
  CONSTRAINT `followuser_userID`
    FOREIGN KEY (`userID`)
    REFERENCES `MusicCommunity`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `followuser_followID`
    FOREIGN KEY (`followID`)
    REFERENCES `MusicCommunity`.`Band` (`bandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Playing`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Playing` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Playing` (
  `bandID` INT NOT NULL,
  `typeID` INT NOT NULL,
  PRIMARY KEY (`bandID`, `typeID`),
  INDEX `playing_typeID_idx` (`typeID` ASC),
  CONSTRAINT `playing_bandID`
    FOREIGN KEY (`bandID`)
    REFERENCES `MusicCommunity`.`Band` (`bandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `playing_typeID`
    FOREIGN KEY (`typeID`)
    REFERENCES `MusicCommunity`.`Type` (`typeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Venue`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Venue` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Venue` (
  `venueID` INT NOT NULL AUTO_INCREMENT COMMENT '	',
  `venueName` VARCHAR(45) NULL,
  `vCity` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `zipCode` INT NULL,
  `hyperLink` VARCHAR(45) NULL,
  PRIMARY KEY (`venueID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Concert`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Concert` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Concert` (
  `concertID` INT NOT NULL AUTO_INCREMENT,
  `concertName` VARCHAR(45) NULL,
  `venueID` INT NOT NULL,
  `datetime` DATETIME NULL,
  `createID` INT NULL,
  `createType` VARCHAR(45) NULL,
  `checkoutLink` VARCHAR(45) NULL,
  `createTime` DATETIME NULL,
  PRIMARY KEY (`concertID`),
  INDEX `concert_venue_idx` (`venueID` ASC),
  INDEX `concert_createID_idx` (`createID` ASC),
  CONSTRAINT `concert_venue`
    FOREIGN KEY (`venueID`)
    REFERENCES `MusicCommunity`.`Venue` (`venueID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `concert_createID`
    FOREIGN KEY (`createID`)
    REFERENCES `MusicCommunity`.`Login` (`loginID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`bandConcert`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`bandConcert` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`bandConcert` (
  `bandID` INT NOT NULL,
  `concertID` INT NOT NULL,
  PRIMARY KEY (`bandID`, `concertID`),
  INDEX `bandConcert_ConcertID_idx` (`concertID` ASC),
  CONSTRAINT `bandConcert_bandID`
    FOREIGN KEY (`bandID`)
    REFERENCES `MusicCommunity`.`Band` (`bandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `bandConcert_ConcertID`
    FOREIGN KEY (`concertID`)
    REFERENCES `MusicCommunity`.`Concert` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Attend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Attend` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Attend` (
  `userID` INT NOT NULL,
  `concertID` INT NOT NULL,
  `status` VARCHAR(45) NULL,
  `rating` INT NULL,
  `ratingTime` DATETIME NULL,
  PRIMARY KEY (`userID`, `concertID`),
  INDEX `attend_concertID_idx` (`concertID` ASC),
  CONSTRAINT `attend_userID`
    FOREIGN KEY (`userID`)
    REFERENCES `MusicCommunity`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `attend_concertID`
    FOREIGN KEY (`concertID`)
    REFERENCES `MusicCommunity`.`Concert` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Recommend`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Recommend` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Recommend` (
  `recommendID` INT NOT NULL AUTO_INCREMENT,
  `userID` INT NOT NULL,
  `typeID` VARCHAR(45) NOT NULL,
  `recommendName` VARCHAR(45) NOT NULL,
  `time` DATETIME NOT NULL,
  PRIMARY KEY (`recommendID`),
  INDEX `recommend_userID_idx` (`userID` ASC),
  INDEX `recommend_typeID_idx` (`typeID` ASC),
  CONSTRAINT `recommend_userID`
    FOREIGN KEY (`userID`)
    REFERENCES `MusicCommunity`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `recommend_typeID`
    FOREIGN KEY (`typeID`)
    REFERENCES `MusicCommunity`.`Type` (`typeName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Postcast`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Postcast` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Postcast` (
  `recommendID` INT NOT NULL,
  `concertID` INT NOT NULL,
  PRIMARY KEY (`recommendID`, `concertID`),
  INDEX `postcast_concertID_idx` (`concertID` ASC),
  CONSTRAINT `postcast_recommendID`
    FOREIGN KEY (`recommendID`)
    REFERENCES `MusicCommunity`.`Recommend` (`recommendID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `postcast_concertID`
    FOREIGN KEY (`concertID`)
    REFERENCES `MusicCommunity`.`Concert` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`followList`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`followList` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`followList` (
  `userID` INT NOT NULL,
  `recommendID` INT NOT NULL,
  PRIMARY KEY (`userID`, `recommendID`),
  INDEX `followList_recommendID_idx` (`recommendID` ASC),
  CONSTRAINT `followList_userId`
    FOREIGN KEY (`userID`)
    REFERENCES `MusicCommunity`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `followList_recommendID`
    FOREIGN KEY (`recommendID`)
    REFERENCES `MusicCommunity`.`Recommend` (`recommendID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Review` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Review` (
  `userID` INT NOT NULL,
  `concertID` INT NOT NULL,
  `content` VARCHAR(45) NULL,
  `reviewTime` DATETIME NULL,
  PRIMARY KEY (`userID`, `concertID`),
  INDEX `review_concertID_idx` (`concertID` ASC),
  CONSTRAINT `review_userID`
    FOREIGN KEY (`userID`)
    REFERENCES `MusicCommunity`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `review_concertID`
    FOREIGN KEY (`concertID`)
    REFERENCES `MusicCommunity`.`Concert` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`Seat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`Seat` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`Seat` (
  `concertID` INT NOT NULL,
  `seatType` INT NOT NULL,
  `seatName` VARCHAR(45) NULL,
  `price` DECIMAL(10,2) NULL,
  `availablity` INT NULL,
  PRIMARY KEY (`concertID`, `seatType`),
  CONSTRAINT `seat_concertID`
    FOREIGN KEY (`concertID`)
    REFERENCES `MusicCommunity`.`Concert` (`concertID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MusicCommunity`.`ReviewBand`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MusicCommunity`.`ReviewBand` ;

CREATE TABLE IF NOT EXISTS `MusicCommunity`.`ReviewBand` (
  `userID` INT NOT NULL,
  `bandID` INT NOT NULL,
  `content` VARCHAR(45) NULL,
  `reviewTime` DATETIME NULL,
  PRIMARY KEY (`userID`, `bandID`),
  INDEX `reviewBand_bandID_idx` (`bandID` ASC),
  CONSTRAINT `reviewBand_userID`
    FOREIGN KEY (`userID`)
    REFERENCES `MusicCommunity`.`User` (`userID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `reviewBand_bandID`
    FOREIGN KEY (`bandID`)
    REFERENCES `MusicCommunity`.`Band` (`bandID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
